import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";
import { ThemeProvider } from "next-themes";
import { NextStepProvider, NextStep } from "nextstepjs";
import ClientOnly from "../components/ClientOnly";
import ReduxProvider from "@/components/ReduxProvider";
import GlobalOverlay from "@/components/GlobalOverlay";
import TutorialCard from "@/components/TutorialCard";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const steps = [
  {
    tour: "userPopupTour",
    steps: [
      {
        icon: <>ðŸ‘‹</>,
        title: "Open the Menu",
        content: (
          <>
            Pin the extension to your toolbar, then click the icon to open it.
          </>
        ),
        selector: "#popup-toggle",
        side: "top-right",
        showControls: true,
        pointerPadding: 8,
        pointerRadius: 8,
      },
      {
        icon: <>ðŸŽ‰</>,
        title: "The Popup",
        content: (
          <>
            This is the <span className="italic">control center</span> of
            Scrollr.
          </>
        ),
        selector: "#popup-tabs-powerbutton",
        side: "top-right",
        showControls: true,
        showSkip: true,
        pointerPadding: 8,
        pointerRadius: 8,
      },
      {
        icon: <>ðŸŽ‰</>,
        title: "The Display Tab",
        content: (
          <>
            Where you can control what you want to see. Customize your Scrollr
            experience here.
          </>
        ),
        selector: "#popup-tabs-display",
        side: "top-right",
        showControls: true,
        showSkip: true,
        pointerPadding: 8,
        pointerRadius: 8,
      },
    ],
  },
];

export default function RootLayout({ children }) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider disableTransitionOnChange>
          <ClientOnly>
            <ReduxProvider>
              <NextStepProvider>
                <NextStep steps={steps} cardComponent={TutorialCard}>
                  <Navbar />
                  {children}
                  <GlobalOverlay />
                </NextStep>
              </NextStepProvider>
            </ReduxProvider>
          </ClientOnly>
        </ThemeProvider>
      </body>
    </html>
  );
}
